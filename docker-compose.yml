services:
  oauth2-proxy:
    container_name: oauth2-proxy
    image: bitnami/oauth2-proxy:latest
    command: --config /oauth2-proxy.cfg
    ports:
      - 4180:4180/tcp
    hostname: oauth2-proxy
    volumes:
      - "./cfg-oauth2/oauth2-proxy.cfg:/oauth2-proxy.cfg"
    restart: always
    depends_on:
      - keycloak
    networks:
      ccnet:
        ipv4_address: 192.168.1.2
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    command:
      - start-dev
      - --hostname=192.168.1.3
      - --import-realm
    expose:
      - "8080"
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: 1234
    hostname: keycloak
    volumes:
      - "./cfg-keycloak/:/opt/keycloak/data/import:ro"
      # - ./test:/test
    restart: always
    networks:
      ccnet:
        ipv4_address: 192.168.1.3
  # nodejson:
  #   container_name: nodejson
  #   image: customnode
  #   build:
  #     dockerfile: node.Dockerfile
  #   restart: always
  #   expose:
  #     - "3000"
  #   ports:
  #     - 3000:3000
  #   networks:
  #     ccnet:
  #       ipv4_address: 192.168.1.4
  frontend:
    container_name: frontend
    image: frontendnode
    build:
      dockerfile: Frontend/Dockerfile
    restart: always
    depends_on:
      - nats
      - oauth2-proxy
    expose:
      - "3000"
    ports:
      - 3000:3000
    networks:
      ccnet:
        ipv4_address: 192.168.1.4
  nats:
    container_name: nats
    image: 'nats:2.10.9'
    command: -js -m 8222
    restart: always
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      ccnet:
        ipv4_address: 192.168.1.5
  observer:
    container_name: observer
    image: observernode
    build:
      dockerfile: Observer/Dockerfile
    restart: always
    depends_on:
      - nats
      - oauth2-proxy
      - frontend
    networks:
      ccnet:
        ipv4_address: 192.168.1.6

networks:
  ccnet:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/16"
